<?xml version="1.0" encoding="UTF-8"?>
<!--
============================================================================
IIS URL Rewrite Configuration
Dropbox AI Organizer - URSALL System
============================================================================
Este archivo configura IIS para:
1. Redirigir HTTP a HTTPS
2. Actuar como reverse proxy para el backend FastAPI
3. Servir archivos estáticos del frontend (React)
4. Manejar rutas de SPA (Single Page Application)
============================================================================
-->
<configuration>
    <system.webServer>

        <!-- =============================================== -->
        <!-- URL REWRITE RULES                               -->
        <!-- =============================================== -->
        <rewrite>
            <rules>

                <!-- REGLA 1: Forzar HTTPS (Redirect HTTP a HTTPS) -->
                <rule name="Force HTTPS" stopProcessing="true">
                    <match url="(.*)" />
                    <conditions>
                        <add input="{HTTPS}" pattern="off" ignoreCase="true" />
                    </conditions>
                    <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
                </rule>

                <!-- REGLA 2: Proxy para Backend - Health Check -->
                <rule name="Backend Health" stopProcessing="true">
                    <match url="^health$" />
                    <action type="Rewrite" url="http://localhost:8000/health" />
                    <serverVariables>
                        <set name="HTTP_X_FORWARDED_PROTO" value="https" />
                        <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
                    </serverVariables>
                </rule>

                <!-- REGLA 3: Proxy para Backend - Authentication Endpoints -->
                <rule name="Backend Auth" stopProcessing="true">
                    <match url="^auth/(.*)$" />
                    <action type="Rewrite" url="http://localhost:8000/auth/{R:1}" />
                    <serverVariables>
                        <set name="HTTP_X_FORWARDED_PROTO" value="https" />
                        <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
                    </serverVariables>
                </rule>

                <!-- REGLA 4: Proxy para Backend - API Endpoints -->
                <rule name="Backend API" stopProcessing="true">
                    <match url="^api/(.*)$" />
                    <action type="Rewrite" url="http://localhost:8000/api/{R:1}" />
                    <serverVariables>
                        <set name="HTTP_X_FORWARDED_PROTO" value="https" />
                        <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
                    </serverVariables>
                </rule>

                <!-- REGLA 5: Proxy para Backend - Docs (Swagger UI) -->
                <rule name="Backend Docs" stopProcessing="true">
                    <match url="^docs$" />
                    <action type="Rewrite" url="http://localhost:8000/docs" />
                    <serverVariables>
                        <set name="HTTP_X_FORWARDED_PROTO" value="https" />
                        <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
                    </serverVariables>
                </rule>

                <!-- REGLA 6: Proxy para Backend - OpenAPI Schema -->
                <rule name="Backend OpenAPI" stopProcessing="true">
                    <match url="^openapi.json$" />
                    <action type="Rewrite" url="http://localhost:8000/openapi.json" />
                    <serverVariables>
                        <set name="HTTP_X_FORWARDED_PROTO" value="https" />
                        <set name="HTTP_X_FORWARDED_FOR" value="{REMOTE_ADDR}" />
                    </serverVariables>
                </rule>

                <!-- REGLA 7: SPA Fallback - Servir index.html para rutas del frontend -->
                <!-- Esto permite que React Router funcione correctamente -->
                <rule name="SPA Fallback" stopProcessing="true">
                    <match url=".*" />
                    <conditions logicalGrouping="MatchAll">
                        <!-- No aplicar a archivos que existen físicamente -->
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
                        <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
                        <!-- No aplicar a rutas de API -->
                        <add input="{REQUEST_URI}" pattern="^/api/" negate="true" />
                        <add input="{REQUEST_URI}" pattern="^/auth/" negate="true" />
                        <add input="{REQUEST_URI}" pattern="^/health" negate="true" />
                        <add input="{REQUEST_URI}" pattern="^/docs" negate="true" />
                    </conditions>
                    <action type="Rewrite" url="/" />
                </rule>

            </rules>

            <!-- Variables del servidor para proxy -->
            <allowedServerVariables>
                <add name="HTTP_X_FORWARDED_PROTO" />
                <add name="HTTP_X_FORWARDED_FOR" />
            </allowedServerVariables>
        </rewrite>

        <!-- =============================================== -->
        <!-- STATIC CONTENT SETTINGS                         -->
        <!-- =============================================== -->
        <staticContent>
            <!-- Primero remover tipos MIME existentes para evitar duplicados -->
            <remove fileExtension=".json" />
            <remove fileExtension=".woff" />
            <remove fileExtension=".woff2" />
            <remove fileExtension=".js" />

            <!-- Ahora agregar los tipos MIME correctos -->
            <mimeMap fileExtension=".json" mimeType="application/json" />
            <mimeMap fileExtension=".woff" mimeType="font/woff" />
            <mimeMap fileExtension=".woff2" mimeType="font/woff2" />
            <mimeMap fileExtension=".js" mimeType="application/javascript" />
        </staticContent>

        <!-- =============================================== -->
        <!-- HTTP HEADERS (Security & CORS)                  -->
        <!-- =============================================== -->
        <httpProtocol>
            <customHeaders>
                <!-- Remove default headers for security -->
                <remove name="X-Powered-By" />

                <!-- Security Headers -->
                <add name="X-Content-Type-Options" value="nosniff" />
                <add name="X-Frame-Options" value="SAMEORIGIN" />
                <add name="X-XSS-Protection" value="1; mode=block" />
                <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />

                <!-- CORS Headers (opcional, el backend FastAPI ya los maneja) -->
                <!-- Descomenta si necesitas configurar CORS desde IIS
                <add name="Access-Control-Allow-Origin" value="*" />
                <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
                <add name="Access-Control-Allow-Headers" value="Content-Type, Authorization" />
                -->
            </customHeaders>
        </httpProtocol>

        <!-- =============================================== -->
        <!-- DEFAULT DOCUMENT                                 -->
        <!-- =============================================== -->
        <defaultDocument enabled="true">
            <files>
                <clear />
                <add value="index.html" />
            </files>
        </defaultDocument>

        <!-- =============================================== -->
        <!-- HTTP ERRORS - Custom Error Pages                -->
        <!-- =============================================== -->
        <httpErrors errorMode="Custom" existingResponse="Auto">
            <!-- SPA handling for 404 errors -->
            <remove statusCode="404" subStatusCode="-1" />
            <error statusCode="404" path="/index.html" responseMode="ExecuteURL" />
        </httpErrors>

        <!-- =============================================== -->
        <!-- COMPRESSION - Enable Gzip/Brotli                 -->
        <!-- =============================================== -->
        <urlCompression doStaticCompression="true" doDynamicCompression="true" />

        <!-- =============================================== -->
        <!-- SECURITY - Request Filtering                     -->
        <!-- =============================================== -->
        <security>
            <requestFiltering>
                <!-- Aumentar límite de tamaño para uploads -->
                <requestLimits maxAllowedContentLength="10485760" /> <!-- 10 MB -->
            </requestFiltering>
        </security>

    </system.webServer>

    <!-- =============================================== -->
    <!-- SYSTEM.WEB SETTINGS                              -->
    <!-- =============================================== -->
    <system.web>
        <!-- Aumentar límite de tamaño de request -->
        <httpRuntime maxRequestLength="10240" /> <!-- 10 MB en KB -->
    </system.web>

</configuration>
