{
  "permissions": {
    "allow": [
      "mcp__jira-mcp-server__*",
      "Bash(dir)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(cat \"$HOME/.config/claude/claude_desktop_config.json\")",
      "Read(//c/Users/alber/Documents/ClaudeMcp/jira-mcp-server/**)",
      "Bash(dir:*)",
      "Read(//c/Users/alber/AppData/**)",
      "Read(//c/Users/alber/.config/**)",
      "Bash(node:*)",
      "Bash(npm install)",
      "Bash(pytest:*)",
      "Bash(pnpm test:*)",
      "Bash(python -m pytest tests/test_validators_advanced.py -v)",
      "Bash(pip install:*)",
      "Bash(python -m pytest tests/test_questions.py -v)",
      "Bash(python -m pytest tests/test_questions.py::TestQuestionFlow::test_start_questions_returns_first_question -v)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(uvicorn:*)",
      "Bash(if [ ! -d \"node_modules\" ])",
      "Bash(then pnpm install)",
      "Bash(fi)",
      "Bash(pnpm dev:*)",
      "Bash(curl http://127.0.0.1:8000/health)",
      "Bash(curl http://127.0.0.1:8000/)",
      "Bash(curl -s http://127.0.0.1:8000/health)",
      "Bash(python:*)",
      "Bash(findstr:*)",
      "Bash(npm test)",
      "mcp__jira-mcp-server__get_issue",
      "Bash(npm test:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(timeout:*)",
      "Bash(tasklist)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(python3 -m pytest backend/tests/test_nlp_extractor.py -v)",
      "Bash(where python)",
      "Bash(C:Python312python.exe -c \"\nfrom app.path_mapper_ursall import suggest_path_ursall\n\n# Ejemplo de procedimiento con tipo de documento Pericial\nresult = suggest_path_ursall(\n    client_name=''GRUPO GORETTI'',\n    tipo_trabajo=''procedimiento'',\n    doc_type=''Pericial'',\n    year=''2025'',\n    month=''08'',\n    jurisdiccion=''social'',\n    juzgado_num=''2'',\n    demarcacion=''Tenerife'',\n    num_procedimiento=''455'',\n    year_proc=''2025'',\n    parte_a=''Pedro Perez'',\n    parte_b=''Cabildo Gomera'',\n    materia_proc=''Despidos''\n)\n\nprint(''=== RESULTADO DE suggest_path_ursall ==='')\nprint(f''path: {result[\"\"path\"\"]}'')\nprint(f''subfolder: {result[\"\"subfolder\"\"]}'')\nprint(f''full_path: {result[\"\"full_path\"\"]}'')\nprint(f''\\n=== ESTRUCTURA DE CARPETAS A CREAR ==='')\nfor i, folder in enumerate(result[''folder_structure''], 1):\n    print(f''{i}. {folder}'')\n\")",
      "Bash(py:*)",
      "Bash(mkdir:*)",
      "Bash(openssl req:*)",
      "Bash(if [ ! -d \"ssl\" ])",
      "Bash(then mkdir ssl)",
      "Bash(powershell:*)",
      "Bash(openssl:*)",
      "Bash(chmod:*)",
      "Bash(if [ -f \"backend/.env\" ])",
      "Bash(then cat backend/.env)",
      "Bash(else echo \"Archivo .env no existe\")",
      "Bash(where python3)",
      "Read(//c/Users/amartin/Desktop/**)",
      "Bash(powershell.exe -ExecutionPolicy Bypass -File ./deploy-complete.ps1)",
      "Bash(powershell.exe -ExecutionPolicy Bypass -File ./deploy-simple.ps1)",
      "Read(//c/inetpub/wwwroot/dropbox-organizer/frontend/**)",
      "Bash(npm run build:*)",
      "Bash(npx vite build)",
      "Read(//c/inetpub/wwwroot/dropbox-organizer/backend/**)",
      "Bash(powershell.exe -ExecutionPolicy Bypass -File .fix-oauth.ps1)",
      "Bash(powershell.exe -ExecutionPolicy Bypass -File \"C:\\Users\\amartin\\Documents\\GitHub\\Dropbox_Chatbot\\deployment\\fix-oauth.ps1\")",
      "Bash(powershell.exe -ExecutionPolicy Bypass -File \"C:\\Users\\amartin\\Documents\\GitHub\\Dropbox_Chatbot\\deployment\\diagnose-certificate.ps1\")"
    ],
    "deny": [],
    "ask": []
  }
}
